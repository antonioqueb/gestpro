// --- ----- ----- ------ ----- ------ ------ ----- ----- ---
generator client {
  provider = "prisma-client-js"
}
// --- ----- ----- ------ ----- ------ ------ ----- ----- ---
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



// --- Core Models:  ----- ------ ----- ------ ------ ----- ----- ---

model User {
  // Información de identificación
  id               Int        @id @default(autoincrement())
  username         String     @unique
  email            String     @unique
  // Información personal
  name             String
  last_name        String?
  profile_picture  String?
  gender           String?
  marital_status   String?
  date_of_birth    DateTime?
  pace_of_birth    DateTime?
  lang             String
  tax_id           String?
  country          String?
  estate           String?
  curp             String?
  // Información de contacto
  phone_number     String?
  whatsapp         String?
  mailing_address  String?
  recovery_mail    String?
  website          String?
  instagram_url    String?
  facebook_url     String?
  tiktok_url       String?
  linkedin_url     String?
  youtube_url      String?
  tw_x_url         String?
  behance_url      String?
  // Información laboral
  industry_id      String?
  job_title        String?
  department       String?
  location         String?
  // Información de cuenta
  password         String
  is_active        Boolean    @default(true)
  license          Licence     @default(FREE)
  role             Role     @default(USER)
  created_at       DateTime   @default(now())
  // Información de Relaciones
  companies        Companies[]
  notifications    Notifications[]
  
}
model Companies {
  // Información de identificación
  id               Int        @id @default(autoincrement())
  tax_id           String     @unique
  // Información de la marca
  name             String
  slogan           String?
  photo            String?
  num_employed     Int
  address          String
  phone            String
  email            String
  website          String
  logo             String
  description      String
  tag_line         String

  // Información de cuenta
  currency         String
  
  // Información de relaciones
  owner_user_id    Int
  owner_user       User @relation(fields: [owner_user_id], references: [id])

  employees        Employees[]
  clients          Clients[]
  providers        Providers[]
  products         Products[]
  purchase         Purchase[]
  Inventories      Inventories[]
  payments         Payments[]
  invoices_purchase         InvoicedPurchase[]
  sales            Sales[]
  order_purchase   OrderPurchase[]
  order_sales      OrderSales[]
  invoices_sales    InvoicesSales[]
  opportunities   Opportunities[]
  contact         Contacts[]
  Accounts        Accounts[]
  JournalEntries JournalEntries[]
  Departaments Departaments[]
  
  
  }


// --- ----- ----- ------ ----- ------ ------ ----- ----- ---- ---- ---



// --- Catalogs:  ----- ------ ----- ------ ------ ----- ----- ---

enum Role {
  USER
  EMPLOYED
  ADMIN
  MASTER
  CONSULTANT
  DEVELOPER
}

enum Licence {
  FREE
  OPERATION
}

enum AccountType {
  ASSET          // Activo
  LIABILITY      // Pasivo
  EQUITY         // Patrimonio
  REVENUE        // Ingreso
  EXPENSE        // Gasto
}

enum PurchaseStatus {
    Pending
    Received
    Canceled
}

enum OrderStatus {
  Presupuesto
  Pedido
  VentaConfirmada
  CompraConfirmada
}
// --- ----- ----- ------ ----- ------ ------ ----- ----- ---




// --- Human Resources (HR): ----- ------ ----- ------ ------ ----- ----- ---

model Departaments {
  // Información de identificación
  id               Int        @id @default(autoincrement())
  
  // Información del modelo
  name     String
  id_company Int
  company Companies @relation(fields: [id_company], references: [id])
  Employees Employees[]

}

model Employees {
  // Información de identificación
  id             Int    @id @default(autoincrement())
  employed_num   Int    @unique

  // Información personal
  first_name     String
  last_name      String
  email          String
  phone_number   String
  address        String
  city           String
  state          String
  zip_code       String
  country        String

  // Información laboral
  department     String
  job_title      String
  salary         Float
  hire_date      DateTime

  // Información de contacto de emergencia
  emergency_contact_name  String
  emergency_contact_phone String
  emergency_contact_email String

 // New Fields for Compensation
  bonus          Float?  // Optional Bonus
  currency       String  // Currency Code (USD, EUR etc.)
  pay_rate       Float?  // For hourly based payments 
  pay_period     String  // 'weekly', 'bi-weekly', etc.


  // Información de relaciones
  company_id Int 
  company      Companies @relation(fields: [company_id], references: [id])
  auditLog     AuditLog[]
  tasks         Tasks[]
  InventoryAdjustments InventoryAdjustments[]
  id_departaments Int
  Departament Departaments @relation(fields: [id_departaments], references: [id])
  performanceReviews   PerformanceReview[]
  

}

model PerformanceReview {
  id             Int         @id @default(autoincrement())
  employee       Employees   @relation(fields: [employeeId], references: [id]) 
  employeeId     Int         @unique
  periodStart    DateTime
  periodEnd      DateTime
  overallRating  Float?      
  goals          String?    
  feedback       String
  notes          String?      
  created_at     DateTime    @default(now())
}


// --- ----- ----- ------ ----- ------ ------ ----- ----- ---




// --- Customer Relationship Management (CRM): ----- ------ ----- ------ ------ ----- ----- ---

model Clients {

 // Información de identificación
  id               Int        @id @default(autoincrement())
  email            String     @unique
  // Información personal
  name             String
  last_name        String?
  profile_picture  String?
  gender           String?
  marital_status   String?
  date_of_birth    DateTime?
  pace_of_birth    DateTime?
  country          String?
  estate           String?
  lang             String
  tax_id           String?
  curp             String?
 
  // Información de contacto
  phone_number     String?
  whatsapp         String?
  mailing_address  String?
  recovery_mail    String?
  website          String?
  instagram_url    String?
  facebook_url     String?
  tiktok_url       String?
  linkedin_url     String?
  youtube_url      String?
  tw_x_url         String?
  behance_url      String?
  // Información laboral
  industry_id      String?
  job_title        String?
  department       String?
  location         String?
  
  // Información de cuenta
  password         String
  is_active        Boolean    @default(true)
  license          String     @default("FREE")
  role             String     @default("USER")
  created_at       DateTime   @default(now())


  // Información de relaciones

  company_id Int 
  company Companies @relation(fields: [company_id], references: [id])



}

model Opportunities {
  
 // Información de identificación
  id               Int        @id @default(autoincrement())
  email            String     @unique
  // Información personal
  name             String
  last_name        String?
  profile_picture  String?
  gender           String?
  marital_status   String?
  date_of_birth    DateTime?
  pace_of_birth    DateTime?
  country          String?
  estate           String?
  lang             String
  tax_id           String?
  curp             String?
 
  // Información de contacto
  phone_number     String?
  whatsapp         String?
  mailing_address  String?
  recovery_mail    String?
  website          String?
  instagram_url    String?
  facebook_url     String?
  tiktok_url       String?
  linkedin_url     String?
  youtube_url      String?
  tw_x_url         String?
  behance_url      String?
  // Información laboral
  industry_id      String?
  job_title        String?
  department       String?
  location         String?
  
  // Información de cuenta
  password         String
  is_active        Boolean    @default(true)
  license          String     @default("FREE")
  role             String     @default("USER")
  created_at       DateTime   @default(now())


  // Información de relaciones

  company_id Int 
  company Companies @relation(fields: [company_id], references: [id])
  status_id        Int
  status          OpportunityStatus @relation(fields: [status_id], references: [id])
  type_id         Int
  type            OpportunityType  @relation(fields: [type_id], references: [id])
  source_id       Int
  source          OpportunitySource  @relation(fields: [source_id], references: [id])




}

model OpportunityStatus {
  id               Int        @id @default(autoincrement())
  name             String     @unique
  description      String?
  is_default       Boolean    @default(false)
  created_at       DateTime   @default(now())
  updated_at       DateTime   @updatedAt
  Opportunities Opportunities[]

}

model OpportunityType {
  id               Int        @id @default(autoincrement())
  name             String     @unique
  description      String?
  is_default       Boolean    @default(false)
  created_at       DateTime   @default(now())
  updated_at       DateTime   @updatedAt
  Opportunities Opportunities[]
}

model OpportunitySource {
  id               Int        @id @default(autoincrement())
  name             String     @unique
  description      String?
  is_default       Boolean    @default(false)
  created_at       DateTime   @default(now())
  updated_at       DateTime   @updatedAt
  Opportunities Opportunities[]
}

model ActivityType {
  id               Int        @id @default(autoincrement())
  name             String     @unique
  description      String?
  is_default       Boolean    @default(false)
  created_at       DateTime   @default(now())
  updated_at       DateTime   @updatedAt
}

model ActivityStatus {
  id               Int        @id @default(autoincrement())
  name             String     @unique
  description      String?
  is_default       Boolean    @default(false)
  created_at       DateTime   @default(now())
  updated_at       DateTime   @updatedAt
}

// --- ----- ----- ------ ----- ------ ------ ----- ----- ---




// --- Inventory and Sales: ----- ------ ----- ------ ------ ----- ----- ---

model Products {

  // Información de identificación
    id            Int       @id @default(autoincrement())
    sku           String    @unique 

  // Información detalles
  name          String    @db.VarChar(255)  // Nombre del producto
  description   String?  
  brand         String?   
  model         String?  
  category      String?   
  tags          String[]  
  cost          Float     
  price         Float    
  weight        Float     
  dimensions    String?   
  images        String[]  
  status        String    @default("active") 

  // Información de relaciones
  company_id Int
  companies Companies @relation(fields: [company_id], references: [id])
  inventories ProductsInvenatory[]
  Inventory_adjustments InventoryAdjustments?
  warehouses  WarehouseProduct[] 




  
  

}

model Inventories {
  id         Int      @id @default(autoincrement())
  product_id  Int      @map("product_id")
  quantity   Int      // Cantidad en existencia

    // Información de relaciones
  company_id Int
  companies Companies @relation(fields: [company_id], references: [id])
  products ProductsInvenatory[]
  
  
}

model Purchase {
  id           Int         @id @default(autoincrement())
  supplier_id   Int         @map("supplier_id")  // Relación con Proveedor
  purchase_date DateTime    @default(now()) 
  invoice_number String?     // Número de factura (puede ser único)
  status OrderStatus @default(CompraConfirmada)
  notes        String?     // Notas adicionales

    // Información de relaciones
  company_id Int
  companies Companies @relation(fields: [company_id], references: [id])
  Invoiced_purchase InvoicedPurchase[]
  order_purchase_id Int? // Relación con Orden de Compra
  order_purchase OrderPurchase? @relation(fields: [order_purchase_id], references: [id]) 

  

}

model Sales {
  id           Int         @id @default(autoincrement())
  sale_date DateTime    @default(now()) 
  invoice_number String?     // Número de factura (puede ser único)
  status       OrderStatus @default(VentaConfirmada)
  notes        String?     // Notas adicionales

    // Información de relaciones
  company_id Int
  companies Companies @relation(fields: [company_id], references: [id])
  invoiced_sales    InvoicesSales[]
  order_sales_id Int 
  order_sales OrderSales @relation(fields: [order_sales_id], references: [id])
  
  

}

model OrderSales {
    id           Int         @id @default(autoincrement())
    order_sale_date DateTime    @default(now()) 
    invoice_number String?     
    status       OrderStatus @default(Presupuesto)
    notes        String?     

      // Información de relaciones
    company_id Int
    companies Companies @relation(fields: [company_id], references: [id])
    sales Sales[] 

  
}

model OrderPurchase {
    id           Int         @id @default(autoincrement())
    order_sale_date DateTime    @default(now()) 
    invoice_number String?     // Número de factura (puede ser único)
    status       OrderStatus @default(Presupuesto)
    notes        String?     // Notas adicionales

      // Información de relaciones
    company_id Int
    companies Companies @relation(fields: [company_id], references: [id])
    purchases Purchase[] // Compras relacionadas
  
}


model Warehouse {
  id          Int     @id @default(autoincrement())
  name        String 
  capacity    Int 
  products    WarehouseProduct[]
  location Location[]
}

model Location {
  id Int @id @default(autoincrement())
  name String
  description String?
  capacity Float
  warehouse_id Int
  warehouse Warehouse @relation(fields: [warehouse_id], references: [id])
}


// Tabla de unión n-n

model ProductsInvenatory {
  inventory_id Int
  inventory Inventories @relation(fields: [inventory_id], references: [id])
  products_id Int
  products Products @relation(fields: [products_id], references: [id])

  @@id([inventory_id, products_id])
}

model WarehouseProduct {
  warehouse_id  Int 
  warehouse     Warehouse @relation(fields: [warehouse_id], references: [id])
  product_id    Int 
  product       Products   @relation(fields: [product_id], references: [id])
  quantity      Int

  @@id([warehouse_id, product_id])
}

// --- ----- ----- ------ ----- ------ ------ ----- ----- ---



// --- Providers: ----- ------ ----- ------ ------ ----- ----- ---

model Providers {

  // Información de identificación
  id               Int        @id @default(autoincrement())
  email            String     @unique
  // Información personal
  name             String
  last_name        String?
  profile_picture  String?
  gender           String?
  marital_status   String?
  date_of_birth    DateTime?
  pace_of_birth    DateTime?
  country          String?
  estate           String?
  lang             String
  tax_id           String?
  curp             String?
 
  // Información de contacto
  phone_number     String?
  whatsapp         String?
  mailing_address  String?
  recovery_mail    String?
  website          String?
  instagram_url    String?
  facebook_url     String?
  tiktok_url       String?
  linkedin_url     String?
  youtube_url      String?
  tw_x_url         String?
  behance_url      String?
  // Información laboral
  industry_id      String?
  job_title        String?
  department       String?
  location         String?
  
  // Información de cuenta
  password         String
  is_active        Boolean    @default(true)
  license          String     @default("FREE")
  role             String     @default("USER")
  created_at       DateTime   @default(now())


  // Información de relaciones
  company_id Int
  companies Companies @relation(fields: [company_id], references: [id])
  
}

// --- ----- ----- ------ ----- ------ ------ ----- ----- ---


// --- Finance and Accounting: ----- ------ ----- ------ ------ ----- ----- ---
model Accounts {
  id          Int       @id @default(autoincrement()) 
  code        String    @unique  // Código numérico/alfanumérico 
  name        String
  type        AccountType   
  description String?
  company_id  Int
  company     Companies @relation(fields: [company_id], references: [id])
  balance     Float?  // Calculado o actualizado periódicamente
  JournalEntryLines JournalEntryLines[]
}

model JournalEntryLines {
  id            Int       @id @default(autoincrement())
  journal_entry JournalEntries @relation(fields: [journal_entry_id], references: [id])
  journal_entry_id Int
  account_id    Int
  account       Accounts  @relation(fields: [account_id], references: [id]) 
  debit         Float?
  credit        Float?
}


model JournalEntries {
  id          Int       @id @default(autoincrement())
  date        DateTime  @default(now())
  description String?
  reference   String?    // No. de factura, nota, etc.
  company_id  Int
  company     Companies @relation(fields: [company_id], references: [id])
  entries     JournalEntryLines[] 
}

model Payments {
    id              Int         @id @default(autoincrement())
    customerId      Int         @map("customer_id")
    invoiceId       Int         @map("invoice_id")
    paymentDate     DateTime    @default(now())
    amount          Float   
    paymentMethod   String       
    referenceNumber String?     

      // Información de relaciones
    company_id Int
    companies Companies @relation(fields: [company_id], references: [id])
  
}

model InvoicedPurchase {
  id             Int          @id @default(autoincrement())
  customerId     Int          @map("customer_id")
  invoiceNumber  String       @unique // Número de factura único
  invoiceDate    DateTime     @default(now())
  dueDate        DateTime     
  subtotal       Float         
  tax            Float         
  total          Float  
  status         String       @default("pending") // pendiente, pagada, anulada, etc.  
  notes          String?     
  companyId      Int?

  // Información de relaciones
  company_id Int
  companies Companies @relation(fields: [company_id], references: [id])
  order_purchare_id Int
  order_purchase Purchase @relation(fields: [order_purchare_id], references: [id])
   
}

model InvoicesSales {
  id             Int          @id @default(autoincrement())
  customerId     Int          @map("customer_id")
  invoiceNumber  String       @unique // Número de factura único
  invoiceDate    DateTime     @default(now())
  dueDate        DateTime     
  subtotal       Float         
  tax            Float         
  total          Float  
  status         String       @default("pending") // pendiente, pagada, anulada, etc.  
  notes          String?     
  companyId      Int?

  // Información de relaciones
  company_id Int
  companies Companies @relation(fields: [company_id], references: [id])
  order_sales_id Int
  order_sales Sales @relation(fields: [order_sales_id], references: [id])
   
}

// --- ----- ----- ------ ----- ------ ------ ----- ----- ---






// --- System Support: ----- ------ ----- ------ ------ ----- ----- ---

model AuditLog {
  id Int @id @default(autoincrement())
  user_id Int
  user Employees @relation(fields: [user_id], references: [id])
  action String
  subject String
  subject_id String
  created_at DateTime @default(now())
}

model Notifications {
  id Int @id @default(autoincrement())
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  title String
  content String
  created_at DateTime @default(now())
  is_read Boolean @default(false)
}

model Tasks {
  id Int @id @default(autoincrement())
  title String
  description String
  status String @default("new")
  priority String @default("low")
  created_at DateTime @default(now())
  user_id Int
  user Employees @relation(fields: [user_id], references: [id])
}

model InventoryAdjustments {
  id Int @id @default(autoincrement())
  product_id Int @unique
  product Products @relation(fields: [product_id], references: [id])
  quantity Int
  reason String
  created_at DateTime @default(now())
  employees_id Int
  employees Employees @relation(fields: [employees_id], references: [id])
}

model Contacts {
  
 // Información de identificación
  id               Int        @id @default(autoincrement())
  email            String     @unique
  // Información personal
  name             String
  last_name        String?
  profile_picture  String?
  gender           String?
  marital_status   String?
  date_of_birth    DateTime?
  pace_of_birth    DateTime?
  country          String?
  estate           String?
  lang             String
  tax_id           String?
  curp             String?
 
  // Información de contacto
  phone_number     String?
  whatsapp         String?
  mailing_address  String?
  recovery_mail    String?
  website          String?
  instagram_url    String?
  facebook_url     String?
  tiktok_url       String?
  linkedin_url     String?
  youtube_url      String?
  tw_x_url         String?
  behance_url      String?
  // Información laboral
  industry_id      String?
  job_title        String?
  department       String?
  location         String?
  
  // Información de cuenta
  password         String
  is_active        Boolean    @default(true)
  license          String     @default("FREE")
  role             String     @default("USER")
  created_at       DateTime   @default(now())


  // Información de relaciones

  company_id Int 
  company Companies @relation(fields: [company_id], references: [id])



}


// --- ----- ----- ------ ----- ------ ------ ----- ----- ---